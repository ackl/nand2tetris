/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // Use 3 MSB to decide which RAM64 chip to select
    DMux8Way(in=load, sel=address[6..8], a=a, b=b, c=c, d=d, e=e, f=f, g=g, h=h);

    RAM64(in=in, load=a, address=address[0..5], out=ram1register);
    RAM64(in=in, load=b, address=address[0..5], out=ram2register);
    RAM64(in=in, load=c, address=address[0..5], out=ram3register);
    RAM64(in=in, load=d, address=address[0..5], out=ram4register);
    RAM64(in=in, load=e, address=address[0..5], out=ram5register);
    RAM64(in=in, load=f, address=address[0..5], out=ram6register);
    RAM64(in=in, load=g, address=address[0..5], out=ram7register);
    RAM64(in=in, load=h, address=address[0..5], out=ram8register);

    Mux8Way16(
    	      a=ram1register,
    		  b=ram2register,
    		  c=ram3register,
    		  d=ram4register,
    		  e=ram5register,
    		  f=ram6register,
    		  g=ram7register,
    		  h=ram8register,
    		  sel=address[6..8],
    		  out=out
		  );
}